<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="labelStyleCommon" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="checkBoxStyleCommon" TargetType="CheckBox">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,4,0,0" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#757473" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="FontFamily" Value="Segoe Fluent Icons" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="buttonBorder" Background="{TemplateBinding Background}"
                        BorderThickness="0.0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#5593FE" TargetName="buttonBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#c32b1c" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkGray" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource labelStyleCommon}">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                        SnapsToDevicePixels="true" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                        SnapsToDevicePixels="true" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="Transparent" />
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#8f8f8f" />
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="White" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="Transparent" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#4a9d9c" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="White" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="Transparent" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#0D6E6E" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#dedede" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource checkBoxStyleCommon}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="1"
                            CornerRadius="4"
                            Height="14"
                            Width="14"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark"
                                    Data="m240.47 71.09l-24-23.58a12 12 0 0 0-17 0L104 141.83l-39.5-38.32a12 12 0 0 0-17 0l-24 24a12 12 0 0 0 0 17l71.61 72a12 12 0 0 0 17 0L240.49 88.08a12 12 0 0 0-.02-16.99m-5.63 11.34l-128.41 128.4a4 4 0 0 1-5.65 0l-71.61-72a4 4 0 0 1 0-5.66l24-24A3.94 3.94 0 0 1 56 108a4.11 4.11 0 0 1 2.89 1.21l42.35 41.08a4 4 0 0 0 5.59 0l98.37-97.1a4 4 0 0 1 5.68 0l24 23.58a4 4 0 0 1-.04 5.66"
                                    Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1"
                                    Opacity="0" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <Rectangle x:Name="indeterminateMark"
                                    Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle"
                                Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.MouseOver.Border}" />
                            <Setter Property="Fill" TargetName="optionMark"
                                Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            <Setter Property="Fill" TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Disabled.Border}" />
                            <Setter Property="Fill" TargetName="optionMark"
                                Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            <Setter Property="Fill" TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Pressed.Background}" />
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Pressed.Border}" />
                            <Setter Property="Fill" TargetName="optionMark"
                                Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            <Setter Property="Fill" TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.Pressed.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>